{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction TestComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction TestComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\");\n    i0.ɵɵtext(2, \"the dark web\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"li\");\n    i0.ɵɵtext(4, \"the second dark web\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"li\");\n    i0.ɵɵtext(6, \"third dark web broski!!!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TestComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" this is my second template! \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3, \" first one didn't rund because i forgot to add an * \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r11);\n  }\n}\nfunction TestComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\");\n    i0.ɵɵtext(1, \"red\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\");\n    i0.ɵɵtext(1, \"green\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\");\n    i0.ɵɵtext(1, \"blue\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\");\n    i0.ɵɵtext(1, \"purple\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\");\n    i0.ɵɵtext(1, \"no color selected\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TestComponent {\n  constructor() {\n    this.name = \"ladzani\";\n    this.textColor = false;\n    this.cFont = \"control-font\";\n    this.displayList = true;\n  }\n  changeColor() {\n    this.textColor = !this.textColor;\n    this.displayList = !this.displayList;\n  }\n}\nTestComponent.ɵfac = function TestComponent_Factory(t) {\n  return new (t || TestComponent)();\n};\nTestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TestComponent,\n  selectors: [[\"testing\"]],\n  decls: 22,\n  vars: 16,\n  consts: [[3, \"click\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"nestedTemplate\", \"\"], [\"mySecondTemplate\", \"\"], [3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"]],\n  template: function TestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n      i0.ɵɵtext(2, \" hello, \");\n      i0.ɵɵelementStart(3, \"span\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TestComponent_Template_button_click_5_listener() {\n        return ctx.changeColor();\n      });\n      i0.ɵɵtext(6, \"click me\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, TestComponent_div_7_Template, 1, 0, \"div\", 1);\n      i0.ɵɵtemplate(8, TestComponent_ng_template_8_Template, 7, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(10, TestComponent_ng_template_10_Template, 4, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(12, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TestComponent_Template_select_ngModelChange_12_listener($event) {\n        return ctx.colors = $event;\n      });\n      i0.ɵɵtemplate(13, TestComponent_option_13_Template, 2, 1, \"option\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\", 6);\n      i0.ɵɵtemplate(17, TestComponent_button_17_Template, 2, 0, \"button\", 7);\n      i0.ɵɵtemplate(18, TestComponent_button_18_Template, 2, 0, \"button\", 7);\n      i0.ɵɵtemplate(19, TestComponent_button_19_Template, 2, 0, \"button\", 7);\n      i0.ɵɵtemplate(20, TestComponent_button_20_Template, 2, 0, \"button\", 7);\n      i0.ɵɵtemplate(21, TestComponent_button_21_Template, 2, 0, \"button\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n      const _r3 = i0.ɵɵreference(11);\n      i0.ɵɵadvance(3);\n      i0.ɵɵclassMap(ctx.cFont);\n      i0.ɵɵclassProp(\"text-color\", ctx.textColor);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.displayList)(\"ngIfThen\", _r1)(\"ngIfElse\", _r3);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.colors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.colorArray);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.colors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"red\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"green\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"blue\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"purple\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchDefault\", \"no-color\");\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\".text-color[_ngcontent-%COMP%] {\\n    color: red;\\n\\n}\\n.control-font[_ngcontent-%COMP%] {\\n    font-size: xx-large;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVzdC90ZXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVOztBQUVkO0FBQ0E7SUFDSSxtQkFBbUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIudGV4dC1jb2xvciB7XG4gICAgY29sb3I6IHJlZDtcblxufVxuLmNvbnRyb2wtZm9udCB7XG4gICAgZm9udC1zaXplOiB4eC1sYXJnZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","element_r11","TestComponent","constructor","name","textColor","cFont","displayList","changeColor","selectors","decls","vars","consts","template","TestComponent_Template","rf","ctx","ɵɵlistener","TestComponent_Template_button_click_5_listener","ɵɵtemplate","TestComponent_div_7_Template","TestComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","TestComponent_ng_template_10_Template","TestComponent_Template_select_ngModelChange_12_listener","$event","colors","TestComponent_option_13_Template","TestComponent_button_17_Template","TestComponent_button_18_Template","TestComponent_button_19_Template","TestComponent_button_20_Template","TestComponent_button_21_Template","ɵɵclassMap","ɵɵclassProp","ɵɵproperty","_r1","_r3","colorArray"],"sources":["/home/dev_ladzi/learning-Angular/hello-world/src/app/test/test.component.ts","/home/dev_ladzi/learning-Angular/hello-world/src/app/test/test.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'testing',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent {\n\n   public name: string = \"ladzani\";\n   public textColor = false;\n   public cFont = \"control-font\";\n   public displayList = true;\n\n\n   \n   changeColor(){\n    this.textColor = !this.textColor;\n    this.displayList = !this.displayList;\n   }\n\n}\n","<div>\n  \n  <p>\n    hello,\n    <span [class]=\"cFont\" [class.text-color]=\"textColor\">{{ name }}</span>\n  </p>\n  <button (click)=\"changeColor()\">click me</button>\n\n  <div *ngIf=\"displayList; then nestedTemplate; else mySecondTemplate\"></div>\n\n  <ng-template #nestedTemplate\n    ><ul>\n      <li>the dark web</li>\n      <li>the second dark web</li>\n      <li>third dark web broski!!!</li>\n    </ul>\n  </ng-template>\n\n  <ng-template #mySecondTemplate>\n    <div>\n      this is my second template! <br />\n      first one didn't rund because i forgot to add an *\n    </div>\n  </ng-template>\n\n  \n  <select [(ngModel)]=\"colors\">\n    <option *ngFor=\"let element of colorArray\">{{element}}</option>\n  </select>\n  <br><br>\n  <div [ngSwitch]=\"colors\">\n    <button *ngSwitchCase=\"'red'\">red</button>\n    <button *ngSwitchCase=\"'green'\">green</button>\n    <button *ngSwitchCase=\"'blue'\">blue</button>\n    <button *ngSwitchCase=\"'purple'\">purple</button>\n    <button *ngSwitchDefault=\"'no-color'\">no color selected</button>\n\n  </div>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}