{"ast":null,"code":"import { catchError, map } from \"rxjs/operators\";\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TestserviceService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"/assets/strangePeople.json\";\n  }\n  getPeople() {\n    return this.http.get(this.url).pipe(map(data => {\n      return data;\n    }), catchError(error => {\n      return throwError(() => new Error() || \"Server Error\");\n    }));\n  }\n}\nTestserviceService.ɵfac = function TestserviceService_Factory(t) {\n  return new (t || TestserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nTestserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TestserviceService,\n  factory: TestserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","map","throwError","TestserviceService","constructor","http","url","getPeople","get","pipe","data","error","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/dev_ladzi/learning-Angular/hello-world/src/app/testservice.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { StrangePeople } from 'src/interfaces/StrangePeople';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from  \"rxjs/operators\";\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n \nexport class TestserviceService {\n  public url = \"/assets/strangePeople.json\";\n\n  \n  constructor(private http: HttpClient) {}\n\n  getPeople(): Observable<StrangePeople[]> {\n    return this.http.get<StrangePeople[]>(this.url).pipe( \n      map( (data) => {\n        return data\n      }),\n      catchError( (error: HttpErrorResponse) => {\n         return throwError(() => new Error() || \"Server Error\");\n        }));\n  }  \n}\n"],"mappings":"AAIA,SAASA,UAAU,EAAEC,GAAG,QAAS,gBAAgB;AACjD,SAASC,UAAU,QAAQ,MAAM;;;AAMjC,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHjB,KAAAC,GAAG,GAAG,4BAA4B;EAGF;EAEvCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkB,IAAI,CAACF,GAAG,CAAC,CAACG,IAAI,CAClDR,GAAG,CAAGS,IAAI,IAAI;MACZ,OAAOA,IAAI;IACb,CAAC,CAAC,EACFV,UAAU,CAAGW,KAAwB,IAAI;MACtC,OAAOT,UAAU,CAAC,MAAM,IAAIU,KAAK,EAAE,IAAI,cAAc,CAAC;IACvD,CAAC,CAAC,CAAC;EACT;;AAdWT,kBAAkB,C;mBAAlBA,kBAAkB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBb,kBAAkB,C;SAAlBA,kBAAkB;EAAAc,OAAA,EAAlBd,kBAAkB,CAAAe,IAAA;EAAAC,UAAA,EAHjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}