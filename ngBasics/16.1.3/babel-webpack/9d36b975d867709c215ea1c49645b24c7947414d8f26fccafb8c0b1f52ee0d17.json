{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TestserviceService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"/assets/strangePeople.json\";\n  }\n  getPeople() {\n    return this.http.get(this.url).pipe(map(data), {\n      return: data\n    }, ca);\n  }\n  errorHandler(error) {\n    return Observable.throw(error.message || \"Server Error\");\n  }\n}\nTestserviceService.ɵfac = function TestserviceService_Factory(t) {\n  return new (t || TestserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nTestserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TestserviceService,\n  factory: TestserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Observable","map","TestserviceService","constructor","http","url","getPeople","get","pipe","data","return","ca","errorHandler","error","throw","message","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/dev_ladzi/learning-Angular/hello-world/src/app/testservice.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { StrangePeople } from 'src/interfaces/StrangePeople';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from  \"rxjs/operators\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\n \nexport class TestserviceService {\n  public url = \"/assets/strangePeople.json\";\n\n  constructor(private http: HttpClient) {}\n\n  getPeople(): Observable<StrangePeople[]> {\n    return this.http.get<StrangePeople[]>(this.url).pipe( map(data) => {return data;}, ca )\n  }\n\n  errorHandler(error: HttpErrorResponse){\n    return Observable.throw(error.message || \"Server Error\");\n    \n  }\n  \n}\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,MAAM;AACjC,SAAqBC,GAAG,QAAS,gBAAgB;;;AAOjD,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFjB,KAAAC,GAAG,GAAG,4BAA4B;EAEF;EAEvCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkB,IAAI,CAACF,GAAG,CAAC,CAACG,IAAI,CAAEP,GAAG,CAACQ,IAAI,CAAC,EAAI;MAACC,MAAM,EAACD;IAAI,CAAE,EAAEE,EAAE,CAAE;EACzF;EAEAC,YAAYA,CAACC,KAAwB;IACnC,OAAOb,UAAU,CAACc,KAAK,CAACD,KAAK,CAACE,OAAO,IAAI,cAAc,CAAC;EAE1D;;AAZWb,kBAAkB,C;mBAAlBA,kBAAkB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBjB,kBAAkB,C;SAAlBA,kBAAkB;EAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;EAAAC,UAAA,EAHjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}